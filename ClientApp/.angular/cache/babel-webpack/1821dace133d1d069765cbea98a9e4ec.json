{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { captureException, getReportDialogEndpoint, withScope } from '@sentry/core';\nimport { addExceptionMechanism, addExceptionTypeValue, addNonEnumerableProperty, getGlobalObject, getOriginalFunction, isDebugBuild, logger, markFunctionWrapped } from '@sentry/utils';\nvar global = getGlobalObject();\nvar ignoreOnError = 0;\n/**\n * @hidden\n */\n\nexport function shouldIgnoreOnError() {\n  return ignoreOnError > 0;\n}\n/**\n * @hidden\n */\n\nexport function ignoreNextOnError() {\n  // onerror should trigger before setTimeout\n  ignoreOnError += 1;\n  setTimeout(function () {\n    ignoreOnError -= 1;\n  });\n}\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\n\nexport function wrap(fn, options, before) {\n  // for future readers what this does is wrap a function and then create\n  // a bi-directional wrapping between them.\n  //\n  // example: wrapped = wrap(original);\n  //  original.__sentry_wrapped__ -> wrapped\n  //  wrapped.__sentry_original__ -> original\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n\n  try {\n    // if we're dealing with a function that was previously wrapped, return\n    // the original wrapper.\n    var wrapper = fn.__sentry_wrapped__;\n\n    if (wrapper) {\n      return wrapper;\n    } // We don't wanna wrap it twice\n\n\n    if (getOriginalFunction(fn)) {\n      return fn;\n    }\n  } catch (e) {\n    // Just accessing custom props in some Selenium environments\n    // can cause a \"Permission denied\" exception (see raven-js#495).\n    // Bail on wrapping and return the function as-is (defers to window.onerror).\n    return fn;\n  }\n  /* eslint-disable prefer-rest-params */\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n\n\n  var sentryWrapped = function () {\n    var args = Array.prototype.slice.call(arguments);\n\n    try {\n      if (before && typeof before === 'function') {\n        before.apply(this, arguments);\n      } // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n\n\n      var wrappedArguments = args.map(function (arg) {\n        return wrap(arg, options);\n      }); // Attempt to invoke user-land function\n      // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n      //       means the sentry.javascript SDK caught an error invoking your application code. This\n      //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n\n      return fn.apply(this, wrappedArguments);\n    } catch (ex) {\n      ignoreNextOnError();\n      withScope(function (scope) {\n        scope.addEventProcessor(function (event) {\n          if (options.mechanism) {\n            addExceptionTypeValue(event, undefined, undefined);\n            addExceptionMechanism(event, options.mechanism);\n          }\n\n          event.extra = __assign(__assign({}, event.extra), {\n            arguments: args\n          });\n          return event;\n        });\n        captureException(ex);\n      });\n      throw ex;\n    }\n  };\n  /* eslint-enable prefer-rest-params */\n  // Accessing some objects may throw\n  // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n\n\n  try {\n    for (var property in fn) {\n      if (Object.prototype.hasOwnProperty.call(fn, property)) {\n        sentryWrapped[property] = fn[property];\n      }\n    }\n  } catch (_oO) {} // eslint-disable-line no-empty\n  // Signal that this function has been wrapped/filled already\n  // for both debugging and to prevent it to being wrapped/filled twice\n\n\n  markFunctionWrapped(sentryWrapped, fn);\n  addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped); // Restore original function name (not all browsers allow that)\n\n  try {\n    var descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name');\n\n    if (descriptor.configurable) {\n      Object.defineProperty(sentryWrapped, 'name', {\n        get: function () {\n          return fn.name;\n        }\n      });\n    } // eslint-disable-next-line no-empty\n\n  } catch (_oO) {}\n\n  return sentryWrapped;\n}\n/**\n * Injects the Report Dialog script\n * @hidden\n */\n\nexport function injectReportDialog(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  if (!global.document) {\n    return;\n  }\n\n  if (!options.eventId) {\n    if (isDebugBuild()) {\n      logger.error('Missing eventId option in showReportDialog call');\n    }\n\n    return;\n  }\n\n  if (!options.dsn) {\n    if (isDebugBuild()) {\n      logger.error('Missing dsn option in showReportDialog call');\n    }\n\n    return;\n  }\n\n  var script = global.document.createElement('script');\n  script.async = true;\n  script.src = getReportDialogEndpoint(options.dsn, options);\n\n  if (options.onLoad) {\n    // eslint-disable-next-line @typescript-eslint/unbound-method\n    script.onload = options.onLoad;\n  }\n\n  var injectionPoint = global.document.head || global.document.body;\n\n  if (injectionPoint) {\n    injectionPoint.appendChild(script);\n  }\n}","map":{"version":3,"sources":["D:/Studies/Vega/ClientApp/node_modules/@sentry/browser/esm/helpers.js"],"names":["__assign","captureException","getReportDialogEndpoint","withScope","addExceptionMechanism","addExceptionTypeValue","addNonEnumerableProperty","getGlobalObject","getOriginalFunction","isDebugBuild","logger","markFunctionWrapped","global","ignoreOnError","shouldIgnoreOnError","ignoreNextOnError","setTimeout","wrap","fn","options","before","wrapper","__sentry_wrapped__","e","sentryWrapped","args","Array","prototype","slice","call","arguments","apply","wrappedArguments","map","arg","ex","scope","addEventProcessor","event","mechanism","undefined","extra","property","Object","hasOwnProperty","_oO","descriptor","getOwnPropertyDescriptor","configurable","defineProperty","get","name","injectReportDialog","document","eventId","error","dsn","script","createElement","async","src","onLoad","onload","injectionPoint","head","body","appendChild"],"mappings":"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","sourcesContent":["import { __assign } from \"tslib\";\nimport { captureException, getReportDialogEndpoint, withScope } from '@sentry/core';\nimport { addExceptionMechanism, addExceptionTypeValue, addNonEnumerableProperty, getGlobalObject, getOriginalFunction, isDebugBuild, logger, markFunctionWrapped, } from '@sentry/utils';\nvar global = getGlobalObject();\nvar ignoreOnError = 0;\n/**\n * @hidden\n */\nexport function shouldIgnoreOnError() {\n    return ignoreOnError > 0;\n}\n/**\n * @hidden\n */\nexport function ignoreNextOnError() {\n    // onerror should trigger before setTimeout\n    ignoreOnError += 1;\n    setTimeout(function () {\n        ignoreOnError -= 1;\n    });\n}\n/**\n * Instruments the given function and sends an event to Sentry every time the\n * function throws an exception.\n *\n * @param fn A function to wrap.\n * @returns The wrapped function.\n * @hidden\n */\nexport function wrap(fn, options, before) {\n    // for future readers what this does is wrap a function and then create\n    // a bi-directional wrapping between them.\n    //\n    // example: wrapped = wrap(original);\n    //  original.__sentry_wrapped__ -> wrapped\n    //  wrapped.__sentry_original__ -> original\n    if (options === void 0) { options = {}; }\n    if (typeof fn !== 'function') {\n        return fn;\n    }\n    try {\n        // if we're dealing with a function that was previously wrapped, return\n        // the original wrapper.\n        var wrapper = fn.__sentry_wrapped__;\n        if (wrapper) {\n            return wrapper;\n        }\n        // We don't wanna wrap it twice\n        if (getOriginalFunction(fn)) {\n            return fn;\n        }\n    }\n    catch (e) {\n        // Just accessing custom props in some Selenium environments\n        // can cause a \"Permission denied\" exception (see raven-js#495).\n        // Bail on wrapping and return the function as-is (defers to window.onerror).\n        return fn;\n    }\n    /* eslint-disable prefer-rest-params */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    var sentryWrapped = function () {\n        var args = Array.prototype.slice.call(arguments);\n        try {\n            if (before && typeof before === 'function') {\n                before.apply(this, arguments);\n            }\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/no-unsafe-member-access\n            var wrappedArguments = args.map(function (arg) { return wrap(arg, options); });\n            // Attempt to invoke user-land function\n            // NOTE: If you are a Sentry user, and you are seeing this stack frame, it\n            //       means the sentry.javascript SDK caught an error invoking your application code. This\n            //       is expected behavior and NOT indicative of a bug with sentry.javascript.\n            return fn.apply(this, wrappedArguments);\n        }\n        catch (ex) {\n            ignoreNextOnError();\n            withScope(function (scope) {\n                scope.addEventProcessor(function (event) {\n                    if (options.mechanism) {\n                        addExceptionTypeValue(event, undefined, undefined);\n                        addExceptionMechanism(event, options.mechanism);\n                    }\n                    event.extra = __assign(__assign({}, event.extra), { arguments: args });\n                    return event;\n                });\n                captureException(ex);\n            });\n            throw ex;\n        }\n    };\n    /* eslint-enable prefer-rest-params */\n    // Accessing some objects may throw\n    // ref: https://github.com/getsentry/sentry-javascript/issues/1168\n    try {\n        for (var property in fn) {\n            if (Object.prototype.hasOwnProperty.call(fn, property)) {\n                sentryWrapped[property] = fn[property];\n            }\n        }\n    }\n    catch (_oO) { } // eslint-disable-line no-empty\n    // Signal that this function has been wrapped/filled already\n    // for both debugging and to prevent it to being wrapped/filled twice\n    markFunctionWrapped(sentryWrapped, fn);\n    addNonEnumerableProperty(fn, '__sentry_wrapped__', sentryWrapped);\n    // Restore original function name (not all browsers allow that)\n    try {\n        var descriptor = Object.getOwnPropertyDescriptor(sentryWrapped, 'name');\n        if (descriptor.configurable) {\n            Object.defineProperty(sentryWrapped, 'name', {\n                get: function () {\n                    return fn.name;\n                },\n            });\n        }\n        // eslint-disable-next-line no-empty\n    }\n    catch (_oO) { }\n    return sentryWrapped;\n}\n/**\n * Injects the Report Dialog script\n * @hidden\n */\nexport function injectReportDialog(options) {\n    if (options === void 0) { options = {}; }\n    if (!global.document) {\n        return;\n    }\n    if (!options.eventId) {\n        if (isDebugBuild()) {\n            logger.error('Missing eventId option in showReportDialog call');\n        }\n        return;\n    }\n    if (!options.dsn) {\n        if (isDebugBuild()) {\n            logger.error('Missing dsn option in showReportDialog call');\n        }\n        return;\n    }\n    var script = global.document.createElement('script');\n    script.async = true;\n    script.src = getReportDialogEndpoint(options.dsn, options);\n    if (options.onLoad) {\n        // eslint-disable-next-line @typescript-eslint/unbound-method\n        script.onload = options.onLoad;\n    }\n    var injectionPoint = global.document.head || global.document.body;\n    if (injectionPoint) {\n        injectionPoint.appendChild(script);\n    }\n}\n"]},"metadata":{},"sourceType":"module"}